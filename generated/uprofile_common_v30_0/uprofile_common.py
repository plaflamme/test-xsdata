from dataclasses import dataclass, field
from enum import Enum
from typing import List, Optional
from xsdata.models.datatype import XmlDate, XmlPeriod

__NAMESPACE__ = "http://www.travelport.com/schema/uprofileCommon_v30_0"


@dataclass
class AgentIdoverride:
    """
    Vendor specific agent identifier overrides to be used to access vendor systems.

    :ivar supplier_code: Supplier code to determine which vendor this
        AgentId belongs to.
    :ivar provider_code: Provider code to route the AgentId to proper
        provider.
    :ivar agent_id: The Agent ID for the applicable supplier/vendor
    """
    class Meta:
        name = "AgentIDOverride"
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    supplier_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "SupplierCode",
            "type": "Attribute",
            "required": True,
            "min_length": 2,
            "max_length": 5,
        }
    )
    provider_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProviderCode",
            "type": "Attribute",
            "required": True,
            "min_length": 2,
            "max_length": 5,
        }
    )
    agent_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "AgentID",
            "type": "Attribute",
            "required": True,
            "min_length": 1,
            "max_length": 32,
        }
    )


@dataclass
class AgentVoucher:
    """
    Agent Voucher Form of Payments.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
            "required": True,
        }
    )


@dataclass
class Auxdata:
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    entry: List["Auxdata.Entry"] = field(
        default_factory=list,
        metadata={
            "name": "Entry",
            "type": "Element",
            "min_occurs": 1,
        }
    )

    @dataclass
    class Entry:
        reason: Optional[str] = field(
            default=None,
            metadata={
                "name": "Reason",
                "type": "Element",
                "required": True,
            }
        )
        description: Optional[str] = field(
            default=None,
            metadata={
                "name": "Description",
                "type": "Element",
                "required": True,
            }
        )


@dataclass
class BillingPointOfSaleInfo:
    """
    Point of Sale information for Billing.

    :ivar origin_application: Name of the Point of Sale application
        which initiated the Request.This information will be provided as
        part of the provisioning of the user.
    :ivar cidbnumber: A 10 Digit customer number generated by CIDB
        system.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    origin_application: Optional[str] = field(
        default=None,
        metadata={
            "name": "OriginApplication",
            "type": "Attribute",
            "required": True,
        }
    )
    cidbnumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "CIDBNumber",
            "type": "Attribute",
            "pattern": r"\d{10}",
        }
    )


@dataclass
class Certificate:
    """
    Certificate Form of Payment.

    :ivar number: The Certificate number
    :ivar amount: The monetary value of the certificate.
    :ivar discount_amount: The monetary discount amount of this
        certificate.
    :ivar discount_percentage: The percentage discount value of this
        certificate.
    :ivar not_valid_before: The date that this certificate becomes
        valid.
    :ivar not_valid_after: The date that this certificate expires.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
            "required": True,
        }
    )
    amount: Optional[str] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Attribute",
        }
    )
    discount_amount: Optional[str] = field(
        default=None,
        metadata={
            "name": "DiscountAmount",
            "type": "Attribute",
        }
    )
    discount_percentage: Optional[int] = field(
        default=None,
        metadata={
            "name": "DiscountPercentage",
            "type": "Attribute",
        }
    )
    not_valid_before: Optional[XmlDate] = field(
        default=None,
        metadata={
            "name": "NotValidBefore",
            "type": "Attribute",
        }
    )
    not_valid_after: Optional[XmlDate] = field(
        default=None,
        metadata={
            "name": "NotValidAfter",
            "type": "Attribute",
        }
    )


@dataclass
class Check:
    """
    Check Form of Payment.

    :ivar micrnumber: Magnetic Ink Character Reader Number of check.
    :ivar routing_number: The bank routing number of the check.
    :ivar account_number: The account number of the check
    :ivar check_number: The sequential check number of the check.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    micrnumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "MICRNumber",
            "type": "Attribute",
            "max_length": 29,
        }
    )
    routing_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "RoutingNumber",
            "type": "Attribute",
        }
    )
    account_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountNumber",
            "type": "Attribute",
        }
    )
    check_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CheckNumber",
            "type": "Attribute",
        }
    )


@dataclass
class DirectPayment:
    """
    Direct Payment Form of Payments.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    text: Optional[str] = field(
        default=None,
        metadata={
            "name": "Text",
            "type": "Attribute",
        }
    )


@dataclass
class MiscFormOfPayment:
    """
    Miscellaneous Form of Payments.

    :ivar credit_card_type: The 2 letter credit/ debit card type or code
        which may not have been issued using the standard bank card
        types  - i.e. an airline issued card
    :ivar credit_card_number:
    :ivar exp_date: The Expiration date of this card in YYYY-MM format.
    :ivar text: Any free form text which may be associated with the
        Miscellaneous Form of Payment. This text may be provider or GDS
        specific
    :ivar category: Indicates what Category the Miscellaneous Form Of
        Payment is being used for payment - The category may vary by
        GDS. Allowable values are "Text" "Credit" "CreditCard"
        "FreeFormCreditCard" "Invoice" "NonRefundable"
        "MultipleReceivables" "Exchange" "Cash"
    :ivar acceptance_override: Override airline restriction on the
        credit card.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    credit_card_type: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardType",
            "type": "Attribute",
            "length": 2,
        }
    )
    credit_card_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "CreditCardNumber",
            "type": "Attribute",
            "min_length": 13,
            "max_length": 128,
        }
    )
    exp_date: Optional[XmlPeriod] = field(
        default=None,
        metadata={
            "name": "ExpDate",
            "type": "Attribute",
        }
    )
    text: Optional[str] = field(
        default=None,
        metadata={
            "name": "Text",
            "type": "Attribute",
        }
    )
    category: Optional[str] = field(
        default=None,
        metadata={
            "name": "Category",
            "type": "Attribute",
            "required": True,
        }
    )
    acceptance_override: Optional[bool] = field(
        default=None,
        metadata={
            "name": "AcceptanceOverride",
            "type": "Attribute",
        }
    )


@dataclass
class NextResultReference:
    """
    Container to return/send additional retrieve/request additional search results.

    :ivar value:
    :ivar provider_code: The code of the Provider (e.g 1G,1S)
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "min_length": 1,
            "white_space": "collapse",
        }
    )
    provider_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProviderCode",
            "type": "Attribute",
            "min_length": 2,
            "max_length": 5,
        }
    )


@dataclass
class OverridePcc:
    """Used for Host Emulation - If used agent will emulate to this PCC in host and execute the request emulated into this PCC. PROVIDER SUPPORTED: JAL

    :ivar provider_code: The code of the provider (e.g. 1G, 1S)
    :ivar pseudo_city_code: The PCC in the host system.
    """
    class Meta:
        name = "OverridePCC"
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    provider_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProviderCode",
            "type": "Attribute",
            "required": True,
            "min_length": 2,
            "max_length": 5,
        }
    )
    pseudo_city_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PseudoCityCode",
            "type": "Attribute",
            "required": True,
            "min_length": 2,
            "max_length": 10,
        }
    )


@dataclass
class PaymentAdvice:
    """
    Contains other form of payment for Cruise Reservations.

    :ivar type_value: Other Payment Yype. Possible Values: AGC - Agency
        Check, AGG - Agency Guarantee, AWC - Award Check, CSH - Cash
        Equivalent, DBC - Denied Boarding Compensation, MCO -
        Miscellaneous Charge Order, TOO - Tour Order, TOV - Tour Voucher
    :ivar document_number: Payment Document Number Examples: 1234567890,
        R7777
    :ivar issue_date: Document Issuance date
    :ivar issue_city: City code of document issuance
    :ivar original_fop: Original form of payment Examples: CHECK 3500
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    type_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
            "required": True,
            "max_length": 3,
        }
    )
    document_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "DocumentNumber",
            "type": "Attribute",
            "required": True,
            "max_length": 22,
        }
    )
    issue_date: Optional[XmlDate] = field(
        default=None,
        metadata={
            "name": "IssueDate",
            "type": "Attribute",
            "required": True,
        }
    )
    issue_city: Optional[str] = field(
        default=None,
        metadata={
            "name": "IssueCity",
            "type": "Attribute",
            "required": True,
            "length": 3,
            "white_space": "collapse",
        }
    )
    original_fop: Optional[str] = field(
        default=None,
        metadata={
            "name": "OriginalFOP",
            "type": "Attribute",
            "max_length": 19,
        }
    )


class PhoneNumberType(Enum):
    AGENCY = "Agency"
    BUSINESS = "Business"
    MOBILE = "Mobile"
    HOME = "Home"
    FAX = "Fax"
    HOTEL = "Hotel"
    OTHER = "Other"
    NONE = "None"
    EMAIL = "Email"


@dataclass
class ProviderReservationInfoRef:
    """
    Container for Provider reservation reference key.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    key: Optional[str] = field(
        default=None,
        metadata={
            "name": "Key",
            "type": "Attribute",
            "required": True,
        }
    )


class RequisitionCategory(Enum):
    GOVERNMENT = "Government"
    OTHER = "Other"


class RequisitionType(Enum):
    CASH = "Cash"
    CREDIT = "Credit"


class ResponseMessageType(Enum):
    WARNING = "Warning"
    ERROR = "Error"
    INFO = "Info"


@dataclass
class State:
    """
    Container to house the state code for an address.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    value: str = field(
        default="",
        metadata={
            "required": True,
        }
    )


@dataclass
class TerminalSessionInfo:
    """Travelport use only.

    This element contains CDATA information representing existing GDS
    session data or ACH credentials information of the terminal user
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    value: str = field(
        default="",
        metadata={
            "required": True,
        }
    )


@dataclass
class TicketNumber:
    """
    The identifying number for the actual ticket.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    value: str = field(
        default="",
        metadata={
            "required": True,
            "min_length": 1,
            "max_length": 13,
        }
    )


@dataclass
class UnitedNations:
    """
    United Nations Form of Payments.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
            "required": True,
        }
    )


@dataclass
class TypeAgencyPayment:
    """
    Type for Agency Payment.

    :ivar agency_billing_identifier: Value of the billing id
    :ivar agency_billing_number: Value of billing number
    :ivar agency_billing_password: Value of billing password
    """
    class Meta:
        name = "typeAgencyPayment"

    agency_billing_identifier: Optional[str] = field(
        default=None,
        metadata={
            "name": "AgencyBillingIdentifier",
            "type": "Attribute",
            "required": True,
            "max_length": 128,
        }
    )
    agency_billing_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "AgencyBillingNumber",
            "type": "Attribute",
            "max_length": 128,
        }
    )
    agency_billing_password: Optional[str] = field(
        default=None,
        metadata={
            "name": "AgencyBillingPassword",
            "type": "Attribute",
            "max_length": 128,
        }
    )


class TypeElementStatus(Enum):
    """Values to specify the state of the element.

    "A" refers to "Add" , "M" refers to "Modified" and "C" refers to
    error conditions when value provided in "Key" attribute is not
    retained in response
    """
    A = "A"
    M = "M"
    C = "C"


class TypeGuaranteeInformationAgencyType(Enum):
    AGENCY_IATA = "AgencyIATA"
    OTHER_AGENCY_IATA = "OtherAgencyIATA"


class TypeGuaranteeInformationType(Enum):
    GUARANTEE = "Guarantee"
    DEPOSIT = "Deposit"


class TypeProfileEntityStatus(Enum):
    """Status of the given profile/entity.

    Any profile with a status other than Active cannot perform most
    transactions.
    """
    ACTIVE = "Active"
    INACTIVE = "Inactive"


class TypeProfileEntityStatusWithDelete(Enum):
    """
    Specify whether the change is to update or delete the field.
    """
    DELETED = "Deleted"
    ACTIVE = "Active"
    INACTIVE = "Inactive"


class TypeProfileType(Enum):
    """
    A type for unique party identifiers of any party role.
    """
    AGENCY_GROUP = "AgencyGroup"
    AGENCY = "Agency"
    BRANCH_GROUP = "BranchGroup"
    BRANCH = "Branch"
    AGENT = "Agent"
    ACCOUNT = "Account"
    TRAVELER_GROUP = "TravelerGroup"
    TRAVELER = "Traveler"


class TypeVoucherType(Enum):
    FULL_CREDIT = "FullCredit"
    GROUP_OR_DAY = "GroupOrDay"
    SPECIFIC_VALUE = "SpecificValue"


@dataclass
class AgencyPayment(TypeAgencyPayment):
    """
    Container for Agency Payment.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"


@dataclass
class PhoneNumber:
    """
    Consists of type (office, home, fax), location (city code), the country code,
    the number, and an extension.

    :ivar provider_reservation_info_ref:
    :ivar key:
    :ivar type_value:
    :ivar location: IATA code for airport or city
    :ivar country_code: Hosts/providers will expect this to be
        international dialing digits
    :ivar area_code:
    :ivar number: The local phone number
    :ivar extension:
    :ivar text:
    :ivar el_stat: This attribute is used to show the action results of
        an element. Possible values are "A" (when elements have been
        added to the UR) and "M" (when existing elements have been
        modified). Response only.
    :ivar key_override: If a duplicate key is found where we are adding
        elements in some cases like URAdd, then instead of erroring out
        set this attribute to true.
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    provider_reservation_info_ref: List[ProviderReservationInfoRef] = field(
        default_factory=list,
        metadata={
            "name": "ProviderReservationInfoRef",
            "type": "Element",
        }
    )
    key: Optional[str] = field(
        default=None,
        metadata={
            "name": "Key",
            "type": "Attribute",
        }
    )
    type_value: Optional[PhoneNumberType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
        }
    )
    location: Optional[str] = field(
        default=None,
        metadata={
            "name": "Location",
            "type": "Attribute",
            "max_length": 10,
        }
    )
    country_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "CountryCode",
            "type": "Attribute",
            "max_length": 5,
        }
    )
    area_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "AreaCode",
            "type": "Attribute",
            "max_length": 10,
        }
    )
    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
            "required": True,
            "min_length": 1,
            "max_length": 83,
        }
    )
    extension: Optional[str] = field(
        default=None,
        metadata={
            "name": "Extension",
            "type": "Attribute",
            "max_length": 10,
        }
    )
    text: Optional[str] = field(
        default=None,
        metadata={
            "name": "Text",
            "type": "Attribute",
            "max_length": 1024,
        }
    )
    el_stat: Optional[TypeElementStatus] = field(
        default=None,
        metadata={
            "name": "ElStat",
            "type": "Attribute",
        }
    )
    key_override: Optional[bool] = field(
        default=None,
        metadata={
            "name": "KeyOverride",
            "type": "Attribute",
        }
    )


@dataclass
class Requisition:
    """
    Requisition Form of Payment.

    :ivar number: Requisition number used for accounting
    :ivar category: Classification Category for the requisition payment
    :ivar type_value: Type can be Cash or Credit for category as
        Government
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
        }
    )
    category: Optional[RequisitionCategory] = field(
        default=None,
        metadata={
            "name": "Category",
            "type": "Attribute",
        }
    )
    type_value: Optional[RequisitionType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
        }
    )


@dataclass
class ResponseMessage:
    """A simple textual fare note.

    Used within several other objects.

    :ivar value:
    :ivar code:
    :ivar type_value: Indicates the type of message (Warning, Error,
        Info)
    :ivar provider_code:
    :ivar supplier_code:
    """
    class Meta:
        namespace = "http://www.travelport.com/schema/uprofileCommon_v30_0"

    value: str = field(
        default="",
        metadata={
            "required": True,
        }
    )
    code: Optional[int] = field(
        default=None,
        metadata={
            "name": "Code",
            "type": "Attribute",
            "required": True,
        }
    )
    type_value: Optional[ResponseMessageType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
        }
    )
    provider_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "ProviderCode",
            "type": "Attribute",
            "min_length": 2,
            "max_length": 5,
        }
    )
    supplier_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "SupplierCode",
            "type": "Attribute",
            "min_length": 2,
            "max_length": 5,
        }
    )


@dataclass
class TypeErrorInfo:
    """
    Container for error data when there is an application error.
    """
    class Meta:
        name = "typeErrorInfo"

    code: Optional[str] = field(
        default=None,
        metadata={
            "name": "Code",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "required": True,
        }
    )
    service: Optional[str] = field(
        default=None,
        metadata={
            "name": "Service",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "required": True,
        }
    )
    type_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "required": True,
        }
    )
    description: Optional[str] = field(
        default=None,
        metadata={
            "name": "Description",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "required": True,
        }
    )
    transaction_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "TransactionId",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "required": True,
        }
    )
    trace_id: Optional[str] = field(
        default=None,
        metadata={
            "name": "TraceId",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    command_history: Optional[str] = field(
        default=None,
        metadata={
            "name": "CommandHistory",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    auxdata: Optional[Auxdata] = field(
        default=None,
        metadata={
            "name": "Auxdata",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    stack_trace: Optional[str] = field(
        default=None,
        metadata={
            "name": "StackTrace",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )


@dataclass
class TypeGuaranteeInformation:
    """
    Information pertaining to the payment of type Guarantee.

    :ivar type_value: Guarantee only or Deposit
    :ivar agency_type: Guarantee to Agency IATA or Guarantee to Another
        Agency IATA
    :ivar iatanumber: Payment IATA number. (ie. IATA of Agency or Other
        Agency)
    """
    class Meta:
        name = "typeGuaranteeInformation"

    type_value: Optional[TypeGuaranteeInformationType] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
            "required": True,
        }
    )
    agency_type: Optional[TypeGuaranteeInformationAgencyType] = field(
        default=None,
        metadata={
            "name": "AgencyType",
            "type": "Attribute",
            "required": True,
        }
    )
    iatanumber: Optional[str] = field(
        default=None,
        metadata={
            "name": "IATANumber",
            "type": "Attribute",
            "required": True,
            "min_length": 1,
            "max_length": 128,
        }
    )


@dataclass
class TypeStructuredAddress:
    """
    A fully structured address.

    :ivar address_name:
    :ivar street:
    :ivar city:
    :ivar state:
    :ivar postal_code:
    :ivar country:
    :ivar provider_reservation_info_ref: Tagging provider reservation
        info with Address.
    :ivar key: Key for update/delete of the element
    :ivar el_stat: This attribute is used to show the action results of
        an element. Possible values are "A" (when elements have been
        added to the UR) and "M" (when existing elements have been
        modified). Response only.
    :ivar key_override: If a duplicate key is found where we are adding
        elements in some cases like URAdd, then instead of erroring out
        set this attribute to true.
    """
    class Meta:
        name = "typeStructuredAddress"

    address_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "AddressName",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "max_length": 128,
        }
    )
    street: List[str] = field(
        default_factory=list,
        metadata={
            "name": "Street",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "max_occurs": 5,
            "min_length": 1,
            "max_length": 255,
        }
    )
    city: Optional[str] = field(
        default=None,
        metadata={
            "name": "City",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "min_length": 2,
            "max_length": 50,
        }
    )
    state: Optional[str] = field(
        default=None,
        metadata={
            "name": "State",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    postal_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "PostalCode",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "min_length": 2,
            "max_length": 15,
        }
    )
    country: Optional[str] = field(
        default=None,
        metadata={
            "name": "Country",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
            "length": 2,
        }
    )
    provider_reservation_info_ref: List[ProviderReservationInfoRef] = field(
        default_factory=list,
        metadata={
            "name": "ProviderReservationInfoRef",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    key: Optional[str] = field(
        default=None,
        metadata={
            "name": "Key",
            "type": "Attribute",
        }
    )
    el_stat: Optional[TypeElementStatus] = field(
        default=None,
        metadata={
            "name": "ElStat",
            "type": "Attribute",
        }
    )
    key_override: Optional[bool] = field(
        default=None,
        metadata={
            "name": "KeyOverride",
            "type": "Attribute",
        }
    )


@dataclass
class TypeVoucherInformation:
    """
    Information pertaining to the payment of a Vehicle Rental.

    :ivar voucher_type: Specifies if the Voucher is for Full Credit or a
        Group/Day or a Monetary Amount.
    :ivar amount: Amount associated with the Voucher.
    :ivar confirmation_number: Confirmation from the vendor for the
        voucher
    :ivar account_name: Associated account name for the voucher
    """
    class Meta:
        name = "typeVoucherInformation"

    voucher_type: Optional[TypeVoucherType] = field(
        default=None,
        metadata={
            "name": "VoucherType",
            "type": "Attribute",
            "required": True,
        }
    )
    amount: Optional[str] = field(
        default=None,
        metadata={
            "name": "Amount",
            "type": "Attribute",
        }
    )
    confirmation_number: Optional[str] = field(
        default=None,
        metadata={
            "name": "ConfirmationNumber",
            "type": "Attribute",
        }
    )
    account_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "AccountName",
            "type": "Attribute",
        }
    )


@dataclass
class TypePaymentCard:
    """
    Container for all credit and debit card information.

    :ivar phone_number:
    :ivar billing_address: The address to where the billing statements
        for this card are sent. Used for address verification purposes.
    :ivar type_value: The 2 letter credit/ debit card type.
    :ivar number:
    :ivar exp_date: The Expiration date of this card in YYYY-MM format.
    :ivar name: The name as it appears on the card.
    :ivar cvv: Card Verification Code
    :ivar approval_code: This code is required for an authorization
        process from the Credit Card company directly,required for some
        of the CCH carriers.This attribute is also used for EMD retrieve
        and issuance transactions.
    """
    class Meta:
        name = "typePaymentCard"

    phone_number: Optional[PhoneNumber] = field(
        default=None,
        metadata={
            "name": "PhoneNumber",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    billing_address: Optional[TypeStructuredAddress] = field(
        default=None,
        metadata={
            "name": "BillingAddress",
            "type": "Element",
            "namespace": "http://www.travelport.com/schema/uprofileCommon_v30_0",
        }
    )
    type_value: Optional[str] = field(
        default=None,
        metadata={
            "name": "Type",
            "type": "Attribute",
            "min_length": 2,
            "max_length": 2,
        }
    )
    number: Optional[str] = field(
        default=None,
        metadata={
            "name": "Number",
            "type": "Attribute",
            "min_length": 13,
            "max_length": 128,
        }
    )
    exp_date: Optional[XmlPeriod] = field(
        default=None,
        metadata={
            "name": "ExpDate",
            "type": "Attribute",
        }
    )
    name: Optional[str] = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Attribute",
            "max_length": 128,
        }
    )
    cvv: Optional[str] = field(
        default=None,
        metadata={
            "name": "CVV",
            "type": "Attribute",
            "max_length": 4,
        }
    )
    approval_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "ApprovalCode",
            "type": "Attribute",
            "min_length": 1,
            "max_length": 16,
        }
    )


@dataclass
class TypeCreditCardType(TypePaymentCard):
    """
    :ivar extended_payment: Used for American Express cards.
    :ivar customer_reference: Agencies use this to pass the traveler
        information to the credit card company.
    :ivar acceptance_override: Override airline restriction on the
        credit card.
    :ivar third_party_payment: If true, this indicates that the credit
        card holder is not one of the passengers.
    :ivar bank_name: Issuing bank name for this credit card
    :ivar bank_country_code: ISO Country code associated with the
        issuing bank
    :ivar bank_state_code: State code associated with the issuing bank.
    """
    class Meta:
        name = "typeCreditCardType"

    extended_payment: Optional[str] = field(
        default=None,
        metadata={
            "name": "ExtendedPayment",
            "type": "Attribute",
        }
    )
    customer_reference: Optional[str] = field(
        default=None,
        metadata={
            "name": "CustomerReference",
            "type": "Attribute",
        }
    )
    acceptance_override: Optional[bool] = field(
        default=None,
        metadata={
            "name": "AcceptanceOverride",
            "type": "Attribute",
        }
    )
    third_party_payment: bool = field(
        default=False,
        metadata={
            "name": "ThirdPartyPayment",
            "type": "Attribute",
        }
    )
    bank_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankName",
            "type": "Attribute",
        }
    )
    bank_country_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankCountryCode",
            "type": "Attribute",
            "length": 2,
        }
    )
    bank_state_code: Optional[str] = field(
        default=None,
        metadata={
            "name": "BankStateCode",
            "type": "Attribute",
            "max_length": 6,
        }
    )
